{"version":3,"sources":["RelatonGraph/example.data.ts","RelatonGraph/RelationGraph.tsx","RelatonGraph/d3.drag.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["exampleData","nodes","id","name","label","links","source","target","value","type","RelationGraph","props","onNodeClick","useState","uuidv4","containerId","dataset","width","height","useEffect","d3","remove","map","d","Object","create","simulation","force","distance","svg","append","attr","link","selectAll","data","join","Math","sqrt","linkLabel","text","node","call","on","event","active","alphaTarget","restart","subject","fx","x","fy","y","drag","labels","style","stopPropagation","names","y1","y2","x1","x2","m","aDegrees","atan","PI","isNaN","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dad62939.chunk.js","sourcesContent":["import { IRelationDataset } from \"./relation.graph.interfaces\";\n\nexport const exampleData: IRelationDataset = {\n    nodes: [\n        { id: 5, name: 'C', label: 'company' },\n        { id: 1, name: 'E', label: 'developer' },\n        { id: 2, name: 'E', label: 'developer' },\n        { id: 3, name: 'E', label: 'developer' },\n        { id: 4, name: 'E', label: 'developer' },\n        { id: 6, name: 'E', label: 'developer' },\n        { id: 7, name: 'E', label: 'developer' },\n    ],\n    links: [\n        { source: 5, target: 1, value: 1, type: 'employee' },\n        { source: 5, target: 2, value: 1, type: 'employee' },\n        { source: 5, target: 3, value: 1, type: 'employee' },\n        { source: 5, target: 4, value: 1, type: 'employee' },\n        { source: 5, target: 6, value: 1, type: 'employee' },\n        { source: 5, target: 7, value: 1, type: 'employee' },\n    ]\n}","import { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { v4 as uuidv4 } from 'uuid';\nimport { IRelationDataset } from './relation.graph.interfaces';\nimport { drag } from './d3.drag';\n\ninterface IProps {\n    height: number;\n    width: number;\n    dataset: IRelationDataset;\n    onNodeClick?: (id: string | number) => any;\n}\n\nexport default function RelationGraph(props: IProps) {\n    const { onNodeClick = () => { } } = props;\n    const [containerId] = useState(`b${uuidv4()}`);\n    const { dataset, width, height } = props;\n\n    useEffect(() => {\n        d3.select(`#${containerId} svg`).remove();\n        const links = dataset.links.map(d => Object.create(d));\n        const nodes = dataset.nodes.map(d => Object.create(d));\n\n        const simulation = d3.forceSimulation(nodes)\n            .force(\"link\", d3.forceLink(links).id((d: any) => d.id))\n            .force(\"link\", d3.forceLink().distance((d: any) => d.distance))\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n        const svg = d3.select(`#${containerId}`)\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height);\n\n        const link = svg.append(\"g\")\n            .attr(\"stroke\", \"#999\")\n            .attr(\"stroke-opacity\", 0.6)\n            .selectAll(\"line\")\n            .data(links)\n            .join(\"line\")\n            .attr(\"stroke-width\", d => Math.sqrt(d.value));\n\n        const linkLabel = svg.append('g')\n            .attr(\"stroke\", \"#1673C8\")\n            .attr(\"stroke-width\", 1)\n            .selectAll('text')\n            .data(links)\n            .join('text')\n            .attr('text-anchor', 'middle')\n            .attr('font-size', 10)\n            .attr('font-weight', 'lighter')\n            .text(d => d.type);\n\n        const node = svg.append(\"g\")\n            .attr(\"stroke\", \"#fff\")\n            .attr(\"stroke-width\", 1.5)\n            .selectAll(\"circle\")\n            .data(nodes)\n            .join(\"circle\")\n            .attr(\"r\", 20)\n            .attr(\"fill\", '#C6E4FF')\n            //@ts-ignore\n            .call(drag(simulation));\n\n        const labels = svg.append('g')\n            .attr(\"stroke\", \"#0F0F0F\")\n            .attr(\"stroke-width\", 1)\n            .selectAll('text')\n            .data(nodes)\n            .join('text')\n            .attr('font-size', 12)\n            .attr('text-anchor', 'middle')\n            .attr('font-weight', 'lighter')\n            .style('cursor', 'pointer')\n            .on('click', function (event, d) {\n                event.stopPropagation();\n                onNodeClick(d.id);\n            })\n            .text(d => d.label);\n\n        const names = svg.append('g')\n            .attr(\"stroke\", \"#1673C8\")\n            .attr(\"stroke-width\", 1)\n            .selectAll('text')\n            .data(nodes)\n            .join('text')\n            .attr('font-size', 14)\n            .text(d => d.name);\n\n        simulation.on(\"tick\", () => {\n            link\n                .attr(\"x1\", d => d.source.x)\n                .attr(\"y1\", d => d.source.y)\n                .attr(\"x2\", d => d.target.x)\n                .attr(\"y2\", d => d.target.y);\n\n            linkLabel\n                .attr('transform', d => {\n                    const [y1, y2, x1, x2] = [d.source.y, d.target.y, d.source.x, d.target.x];\n                    const m = (y2 - y1) / (x2 - x1);\n                    const aRadian = Math.atan(m);\n                    let aDegrees = aRadian * (180 / Math.PI);\n                    if (isNaN(aDegrees)) aDegrees = 0;\n                    return `translate(${(x1 + x2) / 2}, ${(y1 + y2) / 2}) rotate(${aDegrees})`;\n                });\n\n            node\n                .attr(\"cx\", d => d.x)\n                .attr(\"cy\", d => d.y);\n\n            labels\n                .attr(\"x\", d => d.x)\n                .attr(\"y\", d => d.y + 35);\n\n            names\n                .attr(\"x\", d => d.x - 5)\n                .attr(\"y\", d => d.y + 5);\n        });\n    }, [containerId, dataset.links, dataset.nodes, width, height, onNodeClick])\n\n    return (\n        <div id={containerId}></div>\n    );\n}","import * as d3 from 'd3';\n\nexport function drag(simulation: d3.Simulation<any, any>) {\n\n    function dragstarted(event: any) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        simulation.force('charge', null);\n        event.subject.fx = event.subject.x;\n        event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event: any) {\n        event.subject.fx = event.x;\n        event.subject.fy = event.y;\n    }\n\n    function dragended(event: any) {\n        if (!event.active) simulation.alphaTarget(0);\n        event.subject.fx = null;\n        event.subject.fy = null;\n    }\n\n    return d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended);\n}","import './App.css';\nimport { exampleData } from './RelatonGraph/example.data';\nimport RelationGraph from './RelatonGraph/RelationGraph';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RelationGraph\n        width={900}\n        height={600}\n        dataset={exampleData}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}